<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
  
    <pipelines>
      <initialize>
        <!-- Loads all publish exclusion items on Sitecore startup -->
        <processor type="Sitecore.PublishExclusions.LoadPublishExclusions, Sitecore.PublishExclusions" />
      </initialize>

      <publishItem>
        <!-- Skips items from publishing if they have been configured for publish exclusion -->
        <processor type="Sitecore.PublishExclusions.SkipExcludedItems, Sitecore.PublishExclusions"
                   patch:after="processor[@type='Sitecore.Publishing.Pipelines.PublishItem.DetermineAction, Sitecore.Kernel']" />
      </publishItem>

      <getContentEditorWarnings>
        <!-- Shows a warning in the Content Editor if the item is excluded from publish -->
        <processor type="Sitecore.PublishExclusions.IsExcludedFromPublish, Sitecore.PublishExclusions"/>
      </getContentEditorWarnings>
    </pipelines>

    <events timingLevel="custom">
      <event name="item:saved">
        <!-- Reloads publish exclusion items when any of those items are saved from Content Editor -->
        <handler type="Sitecore.PublishExclusions.LoadPublishExclusions, Sitecore.PublishExclusions" method="OnItemSaved"/>
      </event>

      <event name="item:saved:remote">
        <!-- Reloads publish exclusion items when any of those items are saved from Content Editor on a remote machine -->
        <handler type="Sitecore.PublishExclusions.LoadPublishExclusions, Sitecore.PublishExclusions" method="OnItemSavedRemote"/>
      </event>

      <event name="item:deleted">
        <!-- Reloads publish exclusion items when any of those items are deleted from Content Editor -->
        <handler type="Sitecore.PublishExclusions.LoadPublishExclusions, Sitecore.PublishExclusions" method="OnItemDeleted"/>
      </event>

      <event name="item:deleted:remote">
        <!-- Reloads publish exclusion items when any of those items are deleted from Content Editor on a remote machine -->
        <handler type="Sitecore.PublishExclusions.LoadPublishExclusions, Sitecore.PublishExclusions" method="OnItemDeletedRemote"/>
      </event>
    </events>

    <settings>
      <!-- 
      Name of the content authoring database in case you use a name other than "master".
      If not specified, default value of "master" is taken.
      -->
      <setting name="Sitecore.PublishExclusions.MasterDBName" value="master" />

      <!-- 
      Specify the .NET type of the Controller that implements Sitecore.PublishExclusions.IPublishExclusionsController interface.
      The Sitecore.PublishExclusions module comes default with the below controller.
      But the below option is available for anyone to introduce a customized version of the controller.
      -->
      <setting name="Sitecore.PublishExclusions.ControllerType" value="Sitecore.PublishExclusions.PublishExclusionsController, Sitecore.PublishExclusions" />

      <!-- 
      Specify the .NET type of the Repository that implements Sitecore.PublishExclusions.IPublishExclusionsRepository interface.
      The Sitecore.PublishExclusions module comes default with the below repository that read publish exclusion rules from Sitecore.
      But the below option is available for anyone to introduce a different repository - for instance, if publish exclusion rules are stored in XML.
      -->
      <setting name="Sitecore.PublishExclusions.RepositoryType" value="Sitecore.PublishExclusions.PublishExclusionsRepository, Sitecore.PublishExclusions" />
    </settings>

  </sitecore>
</configuration>